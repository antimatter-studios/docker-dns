#!/usr/bin/env bash

# We run this every time to make sure that the package is not installed again
package="libnss-mdns"
found=$(dpkg-query -W --showformat='${Status}\n' $package | grep "install ok installed")

if [ "$found" != "" ]; then
    echo "The package ${yel}'libnss-mdns'${end} was installed"
    echo "On GNU/Linux systems this must be uninstalled for ${yel}*.local${end} domains to function correctly and as expected"
    sudo apt-get remove -y libnss-mdns
fi

container_ip_alias ()
{
    if [[ -z $1 ]]; then echo "${red}Must pass the alias ip address as the first parameter${end}"; exit 1; fi

    echo "Adding Loopback Alias IP Address '$1'"
    sudo ifconfig lo:40 $1 netmask 255.255.255.0 up
}

container_add_dns ()
{
    if [[ -z $1 ]]; then echo "${red}Must pass the dns ip address as the first parameter${end}"; exit 1; fi

    container_remove_dns $1

    # Comment out the dnsmasq configuration
    sudo sed -i 's/^dns=dnsmasq/#dns=dnsmasq/i' /etc/NetworkManager/NetworkManager.conf

    # Now lets configure the DNS server inside the docker container to resolve our project domains
    resolve_conf=/etc/resolvconf/resolv.conf.d/head

    echo "Updating DNS Resolver to use nameserver with ip address ${yel}'$1'${end}"
    echo "${blu}Note: If you are asked for your password, it means your sudo password${end}"

    echo "nameserver $1 # christhomas_supervisor_dnsmasq_ip_address" | sudo tee -a $resolve_conf
    sudo resolvconf -u

    echo "Restarting system services after reconfiguration"
    sudo service network-manager restart
    sudo kill -9 $(ps aux | grep [N]etworkManager/dnsmasq | awk '{ print $2 }')
    sudo kill -9 $(ps aux | grep [d]nsmasq | awk '{ print $2 }')
}

container_remove_dns ()
{
    sudo sed -i 's/^dns=dnsmasq/#dns=dnsmasq/i' /etc/NetworkManager/NetworkManager.conf

    # Now lets configure the DNS server inside the docker container to resolve our project domains
    resolve_conf=/etc/resolvconf/resolv.conf.d/head

    # Remove the nameserver from the resolv.conf
    sudo sed -i "/^nameserver $1/d" $resolve_conf

    sudo resolvconf -u

    sudo service network-manager restart
}

# Function exports and parameters
export container_os_name="GNU/Linux"
export -f container_ip_alias
export -f container_add_dns
export -f container_remove_dns